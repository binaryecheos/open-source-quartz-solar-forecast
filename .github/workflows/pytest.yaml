name: Python package tests

on:
  push:
  pull_request:
    types: [opened, synchronize, reopened]
  schedule:
    - cron: "0 12 * * 1"
  pull_request_target:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  check-data-cache:
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache-data.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install huggingface_hub

      - name: Cache model files
        id: cache-data
        uses: actions/cache@v4
        with:
          path: |
            quartz_solar_forecast/models/model_10_202405.ubj
            quartz_solar_forecast/models/model_10_202405.ubj.zip
          key: ${{ runner.os }}-model-${{ hashFiles('quartz_solar_forecast/forecasts/constants.py', 'quartz_solar_forecast/forecasts/v2.py') }}
          restore-keys: |
            ${{ runner.os }}-model-

      - name: Download model if cache miss
        if: steps.cache-data.outputs.cache-hit != 'true'
        env:
          HF_TOKEN: ${{ vars.HF_TOKEN }}
        run: |
          mkdir -p quartz_solar_forecast/models
          python -c "
          from huggingface_hub import hf_hub_download
          import os
          
          model_dir = 'quartz_solar_forecast/models'
          os.makedirs(model_dir, exist_ok=True)
          
          hf_hub_download(
              repo_id='openclimatefix/open-source-quartz-solar-forecast',
              filename='models/v2/model_10_202405.ubj.zip',
              cache_dir=model_dir
          )
          "

  call-run-python-tests-unit:
    needs: check-data-cache
    uses: openclimatefix/.github/.github/workflows/python-test.yml@issue/pip-all
    with:
      pytest_cov_dir: "quartz_solar_forecast"
      os_list: '["ubuntu-latest"]'
      python-version: "['3.11']"
      extra_commands: |
        echo "HF_TOKEN=${{ vars.HF_TOKEN }}" > .env
        echo "PYTEST_ADDOPTS=-v --durations=0" >> $GITHUB_ENV
      pytest_numcpus: '2'
      test_dir: tests/unit

  call-run-python-tests-all:
    needs: check-data-cache
    uses: openclimatefix/.github/.github/workflows/python-test.yml@issue/pip-all
    if: github.event_name == 'push'
    with:
      pytest_cov_dir: "quartz_solar_forecast"
      os_list: '["ubuntu-latest"]'
      python-version: "['3.11']"
      extra_commands: |
        echo "HF_TOKEN=${{ vars.HF_TOKEN }}" > .env
        echo "PYTEST_ADDOPTS=-v --durations=0" >> $GITHUB_ENV
      pytest_numcpus: '2'
      test_dir: tests
